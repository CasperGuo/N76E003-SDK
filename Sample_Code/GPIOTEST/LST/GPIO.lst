C51 COMPILER V9.01   GPIO                                                                  06/16/2019 01:41:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Output\GPIO.obj
COMPILER INVOKED BY: C:\KeilC51_v5\C51\BIN\C51.EXE Code\GPIO.C BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBUG OB
                    -JECTEXTEND PRINT(.\LST\GPIO.lst) OBJECT(.\Output\GPIO.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 GPIO demo code
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "temperature.h"
  22          //*****************  The Following is in define in Fucntion_define.h  ***************************
  23          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  24          //***********************************************************************************************
  25          #if 0
              ////------------------- Define Port as Quasi mode  -------------------
              //#define P00_Quasi_Mode                                P0M1&=~SET_BIT0;P0M2&=~SET_BIT0
              //#define P01_Quasi_Mode                                P0M1&=~SET_BIT1;P0M2&=~SET_BIT1
              //#define P02_Quasi_Mode                                P0M1&=~SET_BIT2;P0M2&=~SET_BIT2
              //#define P03_Quasi_Mode                                P0M1&=~SET_BIT3;P0M2&=~SET_BIT3
              //#define P04_Quasi_Mode                                P0M1&=~SET_BIT4;P0M2&=~SET_BIT4
              //#define P05_Quasi_Mode                                P0M1&=~SET_BIT5;P0M2&=~SET_BIT5
              //#define P06_Quasi_Mode                                P0M1&=~SET_BIT6;P0M2&=~SET_BIT6
              //#define P07_Quasi_Mode                                P0M1&=~SET_BIT7;P0M2&=~SET_BIT7
              //#define P10_Quasi_Mode                                P1M1&=~SET_BIT0;P1M2&=~SET_BIT0
              //#define P11_Quasi_Mode                                P1M1&=~SET_BIT1;P1M2&=~SET_BIT1
              //#define P12_Quasi_Mode                                P1M1&=~SET_BIT2;P1M2&=~SET_BIT2
              //#define P13_Quasi_Mode                                P1M1&=~SET_BIT3;P1M2&=~SET_BIT3
              //#define P14_Quasi_Mode                                P1M1&=~SET_BIT4;P1M2&=~SET_BIT4
              //#define P15_Quasi_Mode                                P1M1&=~SET_BIT5;P1M2&=~SET_BIT5
              //#define P16_Quasi_Mode                                P1M1&=~SET_BIT6;P1M2&=~SET_BIT6
              //#define P17_Quasi_Mode                                P1M1&=~SET_BIT7;P1M2&=~SET_BIT7
              //#define P20_Quasi_Mode                                P2M1&=~SET_BIT0;P2M2&=~SET_BIT0
              //#define P30_Quasi_Mode                                P3M1&=~SET_BIT0;P3M2&=~SET_BIT0
              ////------------------- Define Port as Push Pull mode -------------------
C51 COMPILER V9.01   GPIO                                                                  06/16/2019 01:41:16 PAGE 2   

              //#define P00_PushPull_Mode                     P0M1|=SET_BIT0;P0M2&=~SET_BIT0
              //#define P01_PushPull_Mode                     P0M1|=SET_BIT1;P0M2&=~SET_BIT1
              //#define P02_PushPull_Mode                     P0M1&=~SET_BIT2;P0M2|=SET_BIT2
              //#define P03_PushPull_Mode                     P0M1&=~SET_BIT3;P0M2|=SET_BIT3
              //#define P04_PushPull_Mode                     P0M1&=~SET_BIT4;P0M2|=SET_BIT4
              //#define P05_PushPull_Mode                     P0M1&=~SET_BIT5;P0M2|=SET_BIT5
              //#define P06_PushPull_Mode                     P0M1&=~SET_BIT6;P0M2|=SET_BIT6
              //#define P07_PushPull_Mode                     P0M1&=~SET_BIT7;P0M2|=SET_BIT7
              //#define P10_PushPull_Mode                     P1M1&=~SET_BIT0;P1M2|=SET_BIT0
              //#define P11_PushPull_Mode                     P1M1&=~SET_BIT1;P1M2|=SET_BIT1
              //#define P12_PushPull_Mode                     P1M1&=~SET_BIT2;P1M2|=SET_BIT2
              //#define P13_PushPull_Mode                     P1M1&=~SET_BIT3;P1M2|=SET_BIT3
              //#define P14_PushPull_Mode                     P1M1&=~SET_BIT4;P1M2|=SET_BIT4
              //#define P15_PushPull_Mode                     P1M1&=~SET_BIT5;P1M2|=SET_BIT5
              //#define P16_PushPull_Mode                     P1M1&=~SET_BIT6;P1M2|=SET_BIT6
              //#define P17_PushPull_Mode                     P1M1&=~SET_BIT7;P1M2|=SET_BIT7
              //#define P20_PushPull_Mode                     P2M1&=~SET_BIT0;P2M2|=SET_BIT0
              //#define P30_PushPull_Mode                     P3M1&=~SET_BIT0;P3M2|=SET_BIT0
              ////------------------- Define Port as Input Only mode -------------------
              //#define P00_Input_Mode                                P0M1|=SET_BIT0;P0M2&=~SET_BIT0
              //#define P01_Input_Mode                                P0M1|=SET_BIT1;P0M2&=~SET_BIT1
              //#define P02_Input_Mode                                P0M1|=SET_BIT2;P0M2&=~SET_BIT2
              //#define P03_Input_Mode                                P0M1|=SET_BIT3;P0M2&=~SET_BIT3
              //#define P04_Input_Mode                                P0M1|=SET_BIT4;P0M2&=~SET_BIT4
              //#define P05_Input_Mode                                P0M1|=SET_BIT5;P0M2&=~SET_BIT5
              //#define P06_Input_Mode                                P0M1|=SET_BIT6;P0M2&=~SET_BIT6
              //#define P07_Input_Mode                                P0M1|=SET_BIT7;P0M2&=~SET_BIT7
              //#define P10_Input_Mode                                P1M1|=SET_BIT0;P1M2&=~SET_BIT0
              //#define P11_Input_Mode                                P1M1|=SET_BIT1;P1M2&=~SET_BIT1
              //#define P12_Input_Mode                                P1M1|=SET_BIT2;P1M2&=~SET_BIT2
              //#define P13_Input_Mode                                P1M1|=SET_BIT3;P1M2&=~SET_BIT3
              //#define P14_Input_Mode                                P1M1|=SET_BIT4;P1M2&=~SET_BIT4
              //#define P15_Input_Mode                                P1M1|=SET_BIT5;P1M2&=~SET_BIT5
              //#define P16_Input_Mode                                P1M1|=SET_BIT6;P1M2&=~SET_BIT6
              //#define P17_Input_Mode                                P1M1|=SET_BIT7;P1M2&=~SET_BIT7
              //#define P20_Input_Mode                                P2M1|=SET_BIT0;P2M2&=~SET_BIT0
              //#define P30_Input_Mode                                P3M1|=SET_BIT0;P3M2&=~SET_BIT0
              ////-------------------Define Port as Open Drain mode -------------------
              //#define P00_OpenDrain_Mode            P0M1|=SET_BIT0;P0M2|=SET_BIT0
              //#define P01_OpenDrain_Mode            P0M1|=SET_BIT1;P0M2|=SET_BIT1
              //#define P02_OpenDrain_Mode            P0M1|=SET_BIT2;P0M2|=SET_BIT2
              //#define P03_OpenDrain_Mode            P0M1|=SET_BIT3;P0M2|=SET_BIT3
              //#define P04_OpenDrain_Mode            P0M1|=SET_BIT4;P0M2|=SET_BIT4
              //#define P05_OpenDrain_Mode            P0M1|=SET_BIT5;P0M2|=SET_BIT5
              //#define P06_OpenDrain_Mode            P0M1|=SET_BIT6;P0M2|=SET_BIT6
              //#define P07_OpenDrain_Mode            P0M1|=SET_BIT7;P0M2|=SET_BIT7
              //#define P10_OpenDrain_Mode            P1M1|=SET_BIT0;P1M2|=SET_BIT0
              //#define P11_OpenDrain_Mode            P1M1|=SET_BIT1;P1M2|=SET_BIT1
              //#define P12_OpenDrain_Mode            P1M1|=SET_BIT2;P1M2|=SET_BIT2
              //#define P13_OpenDrain_Mode            P1M1|=SET_BIT3;P1M2|=SET_BIT3
              //#define P14_OpenDrain_Mode            P1M1|=SET_BIT4;P1M2|=SET_BIT4
              //#define P15_OpenDrain_Mode            P1M1|=SET_BIT5;P1M2|=SET_BIT5
              //#define P16_OpenDrain_Mode            P1M1|=SET_BIT6;P1M2|=SET_BIT6
              //#define P17_OpenDrain_Mode            P1M1|=SET_BIT7;P1M2|=SET_BIT7
              //#define P20_OpenDrain_Mode            P2M1|=SET_BIT0;P2M2|=SET_BIT0
              //#define P30_OpenDrain_Mode            P3M1|=SET_BIT0;P3M2|=SET_BIT0
              ////--------- Define all port as quasi mode ---------
              //#define Set_All_GPIO_Quasi_Mode                       P0M1=0;P0M1=0;P1M1=0;P1M2=0;P2M1=0;P2M2=0;P3M1=0;P3M2=0
              #endif
 105          
 106          /*------------------------------------------------
 107          The main C function.  Program execution starts
C51 COMPILER V9.01   GPIO                                                                  06/16/2019 01:41:16 PAGE 3   

 108          here after stack initialization.
 109          ------------------------------------------------*/
 110                          unsigned short voltage = 16;
 111                      unsigned char temp = 0;
 112          void main (void) 
 113          {
 114   1      //      unsigned char temp;
 115   1              Set_All_GPIO_Quasi_Mode;                                        // Define in Function_define.h
 116   1      
 117   1              P11_Input_Mode;
 118   1      
 119   1              P03_PushPull_Mode;
 120   1              P04_PushPull_Mode;
 121   1              P05_PushPull_Mode;
 122   1              P06_PushPull_Mode;
 123   1              P01_PushPull_Mode;
 124   1              P05_PushPull_Mode;
 125   1      
 126   1              P03 = 0;
 127   1              P04 = 0;
 128   1              P05 = 0;
 129   1              P06 = 0;
 130   1              P01 = 0;
 131   1              P15 = 1;
 132   1              
 133   1      #if 0
                      InitialUART0_Timer3(115200);
              //      set_CLOEN;                                                                              // For clock out from P1.1
                
                while(1)
                {
                              clr_GPIO1;                                                                                      // Tiny board GPIO1 LED define
                              P0 = 0x00;
                              P2 = 0x00;
                              P1 = 0x00;
                              Timer0_Delay1ms(30);
                              P0 = 0xff;
                              P2 = 0xff;
                              P1 = 0xff;
                              set_GPIO1;      
              
                              Send_Data_To_UART0(0x35);                                       //UART0 send ascii "U"
                              temp = 0x31 + P0;
                              Send_Data_To_UART0(temp);
                              temp = 0x31 + P1;
                              Send_Data_To_UART0(temp);
              
                              Timer0_Delay1ms(30);
                }
              #endif
 158   1      
 159   1      #if 1
 160   1        
 161   1                        //test H3 brash charging and turn on MOSFET
 162   1                        P04 = 0;
 163   1                        Timer0_Delay1ms(500);
 164   1      
 165   1      
 166   1      
 167   1              while(voltage < 3000)
 168   1              {
 169   2                      /* code */
C51 COMPILER V9.01   GPIO                                                                  06/16/2019 01:41:16 PAGE 4   

 170   2                      P04 = 1;
 171   2                      temp = ntc_voltage_to_temp(voltage);
 172   2                      P04 = 0;
 173   2                      voltage += 10;
 174   2      
 175   2                      Timer0_Delay1ms(500);
 176   2              }
 177   1              
 178   1        while(1)
 179   1        {
 180   2      
 181   2              // if(P11 == 1)
 182   2              // {
 183   2              // P04 = 1;
 184   2              // P15 = 0;  //turn on mosfet
 185   2              // }
 186   2              // else
 187   2              // {
 188   2              // P04 = 0;
 189   2              // P15 = 1;
 190   2              // }
 191   2      
 192   2      
 193   2      //              clr_GPIO1;                                                                                      // Tiny board GPIO1 LED define
 194   2      //              P0 = 0x00;
 195   2      //              P2 = 0x00;
 196   2      //              P1 = 0x00;
 197   2      //              Timer0_Delay1ms(30);
 198   2      //              P0 = 0xff;
 199   2      //              P2 = 0xff;
 200   2      //              P1 = 0xff;
 201   2      //              set_GPIO1;      
 202   2      //              Timer0_Delay1ms(30);
 203   2        }
 204   1      #endif
 205   1              
 206   1      
 207   1      }
 208          
 209          
 210          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    130    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
